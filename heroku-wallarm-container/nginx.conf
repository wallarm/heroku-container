daemon off;
worker_processes auto;
load_module /opt/wallarm/modules/bullseye-1180/ngx_http_wallarm_module.so;
pid /tmp/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections 768;
  use epoll;
  accept_mutex on;
}

http {
  gzip on;
  gzip_comp_level 2;
  gzip_min_length 512;
  gzip_proxied any; # Heroku router sends Via header

  proxy_temp_path /tmp/proxy_temp;
  client_body_temp_path /tmp/client_temp;
  fastcgi_temp_path /tmp/fastcgi_temp;
  uwsgi_temp_path /tmp/uwsgi_temp;
  scgi_temp_path /tmp/scgi_temp;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  server_tokens off;

  # server_names_hash_bucket_size 64;
  # server_name_in_redirect off;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  # Main Heroku app
  server {
    listen $PORT default_server;
    server_name _;
    wallarm_mode monitoring;

    location / {
      proxy_pass http://unix:/tmp/nginx.socket;

      # Heroku apps are always behind a load balancer, which is why we trust all IPs
      set_real_ip_from 0.0.0.0/0;
      real_ip_header X-Forwarded-For;
      real_ip_recursive off;
      proxy_redirect off;
      proxy_set_header Host $http_host;
      proxy_set_header "Connection" "";
    }

    error_page 403 /403.html;
    location = /403.html {
        root /usr/share/nginx/html;
        internal;
    }
  }

  # Wallarm status helper (localhost-only)
  server {
    listen 127.0.0.8:$PORT;
    server_name localhost;
    allow 127.0.0.0/8;
    deny all;
    wallarm_mode off;
    disable_acl "on";
    access_log off;
    location ~/wallarm-status$ {
      wallarm_status on;
    }
  }
}
